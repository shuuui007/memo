#include <iostream>
#include <vector>
#include <string>
#include "glut.h"
#define _USE_MATH_DEFINES
#include <math.h>
using namespace std;
using std::cin;
using std::cout;
using std::endl;
using std::vector;
using std::string;
using std::pair;

enum MenuState{
	MENU,
	PAUSE,
	PLAY,
	PLAYPL1,
	PLAYPL2,
	LOSS,
	WIN
};
MenuState currentMenuState = MENU;

void MousePressed(int button, int state, int x, int y) {
	double x0 = (x - 350) / 35.0;
	double y0 = -(y - 350) / 35.0;
}

void draw_painted_rect(double x, double y, double w, double h, const char* text, double red = 1, double gr = 1, double bl = 1, 
	double ramkawid=0, double rr = 0, double rg = 0, double rb = 0, double textotstup_x = 0.1, double textotstup_y = 0.1, double tred = 0, double tgr = 0, double tbl = 0) {
	w /= 2;
	h /= 2;
	glBegin(GL_POLYGON);
	glColor3f(red, gr, bl);
	glVertex2f(x-w, y-h);
	glVertex2f(x-w, y+h);
	glVertex2f(x + w, y + h);
	glVertex2f(x+w, y - h);
	glEnd();

	glLineWidth(ramkawid);
	glBegin(GL_LINE_LOOP);
	if (ramkawid == 0) {
		glColor3f(red, gr, bl);
	}
	else glColor3f(rr, rg, rb);
	glVertex2f(x - w, y - h);
	glVertex2f(x - w, y + h);
	glVertex2f(x + w, y + h);
	glVertex2f(x + w, y - h);
	glEnd();

	glColor3f(tred, tgr, tbl);
	int textLength = strlen(text);
	float textX = x + textotstup_x-w;
	float textY = y + textotstup_y-h;

	glRasterPos2f(textX, textY);
	for (int i = 0; i < textLength; i++) {
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, text[i]);
	}
	glFlush();
}

void draw_rect(double x, double y, double wid, double high,  double red=0, double gr=0, double bl=0, double linewid=1) {
	wid /= 2.;
	high /= 2.;
	glLineWidth(linewid);
	glBegin(GL_LINE_LOOP);
	glColor3f(red, gr, bl);

	glVertex2f(x - wid, y - high);
	glVertex2f(x - wid, y + high);

	glVertex2f(x + wid, y + high);
	glVertex2f(x + wid, y - high);
	glEnd();
}

void draw_pole() {
	glLineWidth(2.5);
	glBegin(GL_LINES);
	glColor3f(0.5, 0, 0.1);
	for (int i = -4; i <= 4; i+=2) {
		glVertex2f(i, -4);
		glVertex2f(i, 4);

		glVertex2f(-4, i);
		glVertex2f(4, i);
	}
	glEnd();

	for (int i = -3; i <= 3; i += 2) {
		for (int j = -3; j <= 3; j += 2) {
			draw_rect(i, j, 1.6, 1.6 , 0.5, 0, 0.1);
		}
	}
}

void display() {
	glClear(GL_COLOR_BUFFER_BIT);
	draw_pole();

	switch (currentMenuState) {
	case MENU:
		draw_painted_rect(0, 0, 2.6, 2.6, "", 0.5, 0, 0.1, 2);
	}

    glutSwapBuffers();
}

void timer(int) {
	display();
	glutTimerFunc(100, timer, 0);
}

int main(int argc, char** argv) {
	setlocale(LC_ALL, "rus");
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
	glutInitWindowSize(700, 700);
	glutInitWindowPosition(0, 0);
	glutCreateWindow("");
	glClearColor(1, 0.85, 0.7, 1);
	glMatrixMode(GL_PROJECTION);
	glOrtho(-4, 4, -4, 4, -4, 1);
	glutDisplayFunc(display);

	glutMouseFunc(MousePressed);
	//glutTimerFunc(100, timer, 0);
	glutMainLoop();

	return 0;
}
